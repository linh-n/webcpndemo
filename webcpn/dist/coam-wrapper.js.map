{"version":3,"file":"coam-wrapper.js","sourceRoot":"","sources":["../src/coam-wrapper.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,IAAI,EAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,UAAU,EAAC,MAAM,+BAA+B,CAAC;AAUlD,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IAApC;;QAEL,QAAG,GAAG,EAAE,CAAC;QAET,kBAAa,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;YAC7B,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE;YACd,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAE;gBAC1B,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,gDAAgD,EAChD,EAAC,MAAM,EAAC,CACT,CAAC;gBACF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;oBACjB,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC9C,CAAC;gBACD,OAAO,QAAQ,CAAC,IAAI,EAAiD,CAAC;YACxE,CAAC;SACF,CAAC,CAAC;IAoIL,CAAC;IAlIU,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;YAOH,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YAC1B,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE;YACjB,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;kBAElB,IAAI,CAAC,SAAS,CAAC,GAAG,CAClB,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAA;2CACY,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;wBACvD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC;iCACX,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK;;sBAEjC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG;gBACpB,CAAC,CAAC,IAAI,CAAA,mDAAmD;gBACzD,CAAC,CAAC,EAAE;mBACP,CACF;;aAEJ;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA,kCAAkC,KAAK,MAAM;SACpE,CAAC;;;;;;KAMP,CAAC;IACJ,CAAC;;AAEe,kBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8F3B,AA9FqB,CA8FpB;AAjJF;IADC,QAAQ,CAAC,EAAE,CAAC;wCACJ;AAFE,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CAoJvB","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {Task} from '@lit/task';\nimport {customElement, property} from 'lit/decorators.js';\nimport {unsafeHTML} from 'lit/directives/unsafe-html.js';\n\ntype SidebarMainLink = {\n  app: string;\n  label: string;\n  href: string;\n  icon?: string;\n};\n\n@customElement('coam-wrapper')\nexport class CoamWrapper extends LitElement {\n  @property({})\n  app = '';\n\n  _loadMenuTask = new Task(this, {\n    args: () => [],\n    task: async (_, {signal}) => {\n      const response = await fetch(\n        `https://webcpndemo-menusvc.vercel.app/api/menu`,\n        {signal}\n      );\n      if (!response.ok) {\n        throw new Error(response.status.toString());\n      }\n      return response.json() as unknown as { menuItems: SidebarMainLink[] };\n    },\n  });\n\n  override render() {\n    return html`\n        <div class=\"appbar\">\n          <div class=\"nav\">\n            <slot name=\"logo\"></slot>\n          </div>\n        </div>\n        <div class=\"sidebar\">\n          ${this._loadMenuTask.render({\n            pending: () => ``,\n            complete: (menu) => html`\n              <ul class=\"main\">\n                ${menu.menuItems.map(\n                  (app) => html`\n                    <li class=\"main-item ${this.app === app.app ? 'active' : ''}\">\n                      ${unsafeHTML(app.icon)}\n                      <a href=\"${app.href}\">${app.label}</a>\n                    </li>\n                    ${this.app === app.app\n                      ? html`<li class=\"sub\"><slot name=\"sidebar\"></slot></li>`\n                      : ''}\n                  `\n                )}\n              </ul>\n            `,\n            error: (error) => html`<p>Oops, something went wrong: ${error}</p>`,\n          })}\n        </div>\n        <div class=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static override styles = css`\n    :host {\n      color: #424242;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n        Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;\n      font-size: 13px;\n      display: grid;\n      grid-template-areas:\n        'appbar appbar'\n        'sidebar content';\n      grid-template-columns: 250px 1fr;\n      grid-template-rows: 50px 1fr;\n      gap: 0;\n      height: 100vh;\n    }\n\n    ul {\n      list-style: none;\n    }\n\n    a {\n      text-decoration: none;\n      color: inherit;\n    }\n\n    .sidebar {\n      grid-area: sidebar;\n      overflow-y: auto;\n      background-color: #fafafa;\n    }\n\n    .appbar {\n      grid-area: appbar;\n      background-color: #2196f3;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0 20px;\n    }\n\n    .appbar .nav {\n      display: flex;\n      gap: 20px;\n      height: 100%;\n      align-items: center;\n    }\n\n    .sidebar .main {\n      list-style: none;\n      padding: 20px 20px 20px 0;\n      margin: 0;\n      font-size: 1.1em;\n    }\n\n    .sidebar .main li.main-item {\n      padding: 10px 20px;\n      margin: 10px 0 10px 0;\n      display: flex;\n      align-items: center;\n      gap: 10px;\n      border-radius: 0 5px 5px 0;\n    }\n\n    .sidebar .main li.main-item a {\n      display: block;\n    }\n\n    .sidebar .main li.main-item.active {\n      background-color: #e3f2fd;\n      color: #2196f3 !important;\n    }\n\n    .sidebar .main .sub {\n      padding: 0 0 0 35px;\n    }\n\n    .sidebar ::slotted(a) {\n      display: block;\n      padding: 5px 10px !important;\n      text-decoration: none;\n      color: inherit;\n      font-size: 13px;\n      border-radius: 4px;\n    }\n\n    .sidebar ::slotted(a.active) {\n      background-color: #e3f2fd;\n      color: #2196f3 !important;\n    }\n\n    .content {\n      grid-area: content;\n      overflow-y: auto;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'coam-wrapper': CoamWrapper;\n  }\n}\n"]}